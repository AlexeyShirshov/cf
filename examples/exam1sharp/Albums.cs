//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This file was generated by OrmCodeGen v1.0.2692.25639 application(OrmCodeGenLib v1.0.2692.25639).
//
//By user 'alex' at 16.05.2007 16:34:18.
//
//
namespace test
{
	using System;
	using System.Collections.Generic;
	using Worm.Orm;
	
	
	[Worm.Orm.EntityAttribute(typeof(test.Albums.AlbumsSchemaDef), "1", EntityName="Albums")]
	public class Albums : Worm.Orm.OrmBase
	{
		
		#region Private Fields
		private int _id;
		
		private string _name;
		
		private System.Nullable<System.DateTime> _release;
		#endregion
		
		#region Constructors
		public Albums()
		{
		}
		
		public Albums(int id, Worm.Orm.OrmCacheBase cache, Worm.Orm.OrmSchemaBase schema) : 
				base(id, cache, schema)
		{
		}
		#endregion
		
		#region Description Properties
		[Worm.Orm.ColumnAttribute("ID", Worm.Orm.Field2DbRelations.PK)]
		public virtual int Id
		{
			get
			{
				System.IDisposable syncHelper;
				syncHelper = null;
				try
				{
					syncHelper = this.SyncHelper(true, "ID");
					return this._id;
				}
				finally
				{
					if ((syncHelper != null))
					{
						((System.IDisposable)(syncHelper)).Dispose();
					}
				}
			}
			set
			{
				System.IDisposable syncHelper;
				syncHelper = null;
				try
				{
					syncHelper = this.SyncHelper(false, "ID");
					this._id = value;
				}
				finally
				{
					if ((syncHelper != null))
					{
						((System.IDisposable)(syncHelper)).Dispose();
					}
				}
			}
		}
		
		[Worm.Orm.ColumnAttribute("Name", Worm.Orm.Field2DbRelations.None)]
		public virtual string Name
		{
			get
			{
				System.IDisposable syncHelper;
				syncHelper = null;
				try
				{
					syncHelper = this.SyncHelper(true, "Name");
					return this._name;
				}
				finally
				{
					if ((syncHelper != null))
					{
						((System.IDisposable)(syncHelper)).Dispose();
					}
				}
			}
			set
			{
				System.IDisposable syncHelper;
				syncHelper = null;
				try
				{
					syncHelper = this.SyncHelper(false, "Name");
					this._name = value;
				}
				finally
				{
					if ((syncHelper != null))
					{
						((System.IDisposable)(syncHelper)).Dispose();
					}
				}
			}
		}
		
		[Worm.Orm.ColumnAttribute("Release", Worm.Orm.Field2DbRelations.None)]
		public virtual System.Nullable<System.DateTime> Release
		{
			get
			{
				System.IDisposable syncHelper;
				syncHelper = null;
				try
				{
					syncHelper = this.SyncHelper(true, "Release");
					return this._release;
				}
				finally
				{
					if ((syncHelper != null))
					{
						((System.IDisposable)(syncHelper)).Dispose();
					}
				}
			}
			set
			{
				System.IDisposable syncHelper;
				syncHelper = null;
				try
				{
					syncHelper = this.SyncHelper(false, "Release");
					this._release = value;
				}
				finally
				{
					if ((syncHelper != null))
					{
						((System.IDisposable)(syncHelper)).Dispose();
					}
				}
			}
		}
		#endregion
		
		#region Static members
		/// <summary>
		///Метод копирует (потоко-небезопасно) значения полей одного объекта в другой
		///</summary>
		protected static void CopyAlbums(test.Albums from, test.Albums to)
		{
			to._id = from._id;
			to._name = from._name;
			to._release = from._release;
		}
		#endregion
		
		protected override void CopyBody(Worm.Orm.OrmBase from, Worm.Orm.OrmBase to)
		{
			test.Albums.CopyAlbums(((test.Albums)(from)), ((test.Albums)(to)));
		}
		
		public override System.Collections.Generic.IComparer<T> CreateSortComparer<T>(string sort, Worm.Orm.SortType sortType)
		
		{
			throw new System.NotImplementedException("The method or operation is not implemented.");
		}
		
		public override System.Collections.IComparer CreateSortComparer(string sort, Worm.Orm.SortType sortType)
		{
			throw new System.NotImplementedException("The method or operation is not implemented.");
		}
		
		public override void SetValue(System.Reflection.PropertyInfo pi, Worm.Orm.ColumnAttribute c, object value)
		{
			if ((c.FieldName == "ID"))
			{
				this._id = ((int)(value));
				return;
			}
			if ((c.FieldName == "Name"))
			{
				this._name = ((string)(value));
				return;
			}
			if ((c.FieldName == "Release"))
			{
				this._release = ((System.Nullable<System.DateTime>)(value));
				return;
			}
			base.SetValue(pi, c, value);
		}
		
		protected override Worm.Orm.OrmBase GetNew()
		{
			return new test.Albums(this.Identifier, this.OrmCache, this.OrmSchema);
		}
		
		#region Nested Types
		public class AlbumsSchemaDef : Worm.Orm.IOrmObjectSchema, Worm.Orm.IOrmSchemaInit
		{
			
			#region Private Fields
			private Worm.Orm.OrmObjectIndex _idx;
			
			private Worm.Orm.OrmTable[] _tables;
			
			private object _forTablesLock = new object();
			
			private Worm.Orm.M2MRelation[] _m2mRelations;
			
			private object _forM2MRelationsLock = new object();
			
			private object _forIdxLock = new object();
			
			protected Worm.Orm.OrmSchemaBase _schema;
			
			protected System.Type _entityType;
			#endregion
			
			protected virtual Worm.Orm.OrmTable GetTypeMainTable(System.Type type)
			{
				Worm.Orm.OrmTable[] tables;
				tables = ((Worm.Orm.IDbSchema)(this._schema)).GetTables(type);
				return ((Worm.Orm.OrmTable)(tables.GetValue(0)));
			}
			
			#region Base type related members
			public virtual Worm.Orm.OrmTable[] GetTables()
			{
				if ((this._tables == null))
				{
					object lockCachedExpression_2bf61b2353be42399ed18a80b086b170 = this._forTablesLock;
					System.Threading.Monitor.Enter(lockCachedExpression_2bf61b2353be42399ed18a80b086b170);
					try
					{
						if ((this._tables == null))
						{
							this._tables = new Worm.Orm.OrmTable[] {
									new Worm.Orm.OrmTable("[dbo].[Albums]")};
						}
					}
					finally
					{
						System.Threading.Monitor.Exit(lockCachedExpression_2bf61b2353be42399ed18a80b086b170);
					}
				}
				return this._tables;
			}
			
			protected virtual Worm.Orm.OrmTable GetTable(test.Albums.AlbumsSchemaDef.TablesLink tbl)
			{
				return ((Worm.Orm.OrmTable)(this.GetTables().GetValue(((int)(tbl)))));
			}
			
			public virtual bool ChangeValueType(Worm.Orm.ColumnAttribute c, object value, ref object newvalue)
			{
				newvalue = value;
				return false;
			}
			
			public virtual System.Collections.IList ExternalSort(string sort, Worm.Orm.SortType sortType, System.Collections.IList objs)
			{
				return objs;
			}
			
			public virtual Worm.Orm.OrmJoin GetJoins(Worm.Orm.OrmTable left, Worm.Orm.OrmTable right)
			{
				return default(Worm.Orm.OrmJoin);
			}
			
			public virtual Worm.Orm.ColumnAttribute[] GetSuppressedColumns()
			{
				return new Worm.Orm.ColumnAttribute[0];
			}
			
			public virtual Worm.Orm.IOrmFilter GetFilter(object filter_info)
			{
				return null;
			}
			
			public virtual string MapSort2FieldName(string sort)
			{
				return null;
			}
			
			public virtual bool get_IsExternalSort(string sort)
			{
				return false;
			}
			
			public virtual Worm.Orm.M2MRelation[] GetM2MRelations()
			{
				if ((this._m2mRelations == null))
				{
					object lockCachedExpression_27c210f251c64375bfd9e7bf64341126 = this._forM2MRelationsLock;
					System.Threading.Monitor.Enter(lockCachedExpression_27c210f251c64375bfd9e7bf64341126);
					try
					{
						if ((this._m2mRelations == null))
						{
							this._m2mRelations = new Worm.Orm.M2MRelation[0];
						}
					}
					finally
					{
						System.Threading.Monitor.Exit(lockCachedExpression_27c210f251c64375bfd9e7bf64341126);
					}
				}
				return this._m2mRelations;
			}
			
			public virtual Worm.Orm.Collections.IndexedCollection<string, Worm.Orm.MapField2Column> GetFieldColumnMap()
			{
				if ((this._idx == null))
				{
					object lockCachedExpression_cb678295f99047a9ba18312d4ed9968b = this._forIdxLock;
					System.Threading.Monitor.Enter(lockCachedExpression_cb678295f99047a9ba18312d4ed9968b);
					try
					{
						if ((this._idx == null))
						{
							Worm.Orm.OrmObjectIndex idx = new Worm.Orm.OrmObjectIndex();
							idx.Add(new Worm.Orm.MapField2Column("ID", "id", this.GetTable(test.Albums.AlbumsSchemaDef.TablesLink.tbldboAlbums)));
							idx.Add(new Worm.Orm.MapField2Column("Name", "name", this.GetTable(test.Albums.AlbumsSchemaDef.TablesLink.tbldboAlbums)));
							idx.Add(new Worm.Orm.MapField2Column("Release", "release_dt", this.GetTable(test.Albums.AlbumsSchemaDef.TablesLink.tbldboAlbums)));
							this._idx = idx;
						}
					}
					finally
					{
						System.Threading.Monitor.Exit(lockCachedExpression_cb678295f99047a9ba18312d4ed9968b);
					}
				}
				return this._idx;
			}
			#endregion
			
			public virtual void GetSchema(Worm.Orm.OrmSchemaBase schema, System.Type t)
			{
				this._schema = schema;
				this._entityType = t;
			}
			
			#region Nested Types
			public enum TablesLink
			{
				
				#region Private Fields
				tbldboAlbums = 0,
				#endregion
			}
			#endregion
		}
		#endregion
	}
}
