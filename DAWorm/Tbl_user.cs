//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This file was generated by OrmCodeGen v1.0.0.0 application(OrmCodeGenLib v1.0.0.0).
//
//
//
namespace DAWorm
{
	
	
	[Worm.Orm.EntityAttribute(typeof(DAWorm.Tbl_user.Tbl_userSchemaDef), "1", EntityName=DAWorm.Tbl_user.Descriptor.EntityName)]
	[System.SerializableAttribute()]
	public class Tbl_user : Worm.Orm.OrmBaseT<Tbl_user>, Worm.Orm.IOrmEditable<Tbl_user>
	{
		
		#region Private Fields
		private string _first_name;
		
		private string _last_name;
		#endregion
		
		#region Constructors
		public Tbl_user()
		{
		}
		
		public Tbl_user(int id, Worm.Orm.OrmCacheBase cache, Worm.Orm.OrmSchemaBase schema) : 
				base(id, cache, schema)
		{
		}
		#endregion
		
		#region Properties
		[Worm.Orm.ColumnAttribute(Tbl_user.Properties.First_name)]
		public virtual string First_name
		{
			get
			{
using (this.SyncHelper(true, "First_name"))
{
    return this._first_name;
}
			}
			set
			{
using (this.SyncHelper(false, "First_name"))
{
    this._first_name = value;
}
			}
		}
		
		[Worm.Orm.ColumnAttribute(Tbl_user.Properties.Last_name)]
		public virtual string Last_name
		{
			get
			{
using (this.SyncHelper(true, "Last_name"))
{
    return this._last_name;
}
			}
			set
			{
using (this.SyncHelper(false, "Last_name"))
{
    this._last_name = value;
}
			}
		}
		#endregion
		
		public virtual void CopyBody(Tbl_user from, Tbl_user to)
		{
			to._first_name = from._first_name;
			to._last_name = from._last_name;
		}
		
		public override void SetValue(System.Reflection.PropertyInfo pi, Worm.Orm.ColumnAttribute c, object value)
		{
			string fieldName = c.FieldName;
			if (Tbl_user.Properties.First_name.Equals(fieldName))
			{
				this._first_name = ((string)(value));
				return;
			}
			if (Tbl_user.Properties.Last_name.Equals(fieldName))
			{
				this._last_name = ((string)(value));
				return;
			}
			base.SetValue(pi, c, value);
		}
		
		public override object GetValue(string propAlias, Worm.Orm.IOrmObjectSchemaBase schema)
		{
			if (Tbl_user.Properties.First_name.Equals(propAlias))
			{
				return this.First_name;
			}
			if (Tbl_user.Properties.Last_name.Equals(propAlias))
			{
				return this.Last_name;
			}
			return base.GetValue(propAlias, schema);
		}
		
		public override void CreateObject(string fieldName, object value)
		{
			throw new System.InvalidOperationException("Invalid method usage.");
		}
		
		#region Nested Types
		/// Entity properties's aliases
		public class Properties
		{
			
			#region Private Fields
			public const string ID = "ID";
			
			public const string First_name = "First_name";
			
			public const string Last_name = "Last_name";
			#endregion
			
			#region Constructors
			private Properties()
			{
			}
			#endregion
		}
		
		/// Entity's  descriptor
		public class Descriptor
		{
			
			#region Private Fields
			public const string EntityName = "Tbl_user";
			#endregion
			
			#region Constructors
			private Descriptor()
			{
			}
			#endregion
		}
		
		public class Tbl_userSchemaDef : Worm.Orm.IOrmObjectSchema, Worm.Orm.IOrmSchemaInit
		{
			
			#region Private Fields
			private Worm.Orm.Collections.IndexedCollection<string, Worm.Orm.MapField2Column> _idx;
			
			private Worm.Orm.OrmTable[] _tables;
			
			private object _forTablesLock = new object();
			
			private Worm.Orm.M2MRelation[] _m2mRelations;
			
			private object _forM2MRelationsLock = new object();
			
			private object _forIdxLock = new object();
			
			protected Worm.Orm.OrmSchemaBase _schema;
			
			protected System.Type _entityType;
			#endregion
			
			protected virtual Worm.Orm.OrmTable GetTypeMainTable(System.Type type)
			{
				Worm.Orm.OrmTable[] tables;
				tables = ((Worm.Orm.IDbSchema)(this._schema)).GetTables(type);
				return ((Worm.Orm.OrmTable)(tables.GetValue(0)));
			}
			
			public virtual Worm.Orm.OrmTable[] GetTables()
			{
				if ((this._tables == null))
				{
lock (this._forTablesLock)
{
    if ((this._tables == null)) {
        this._tables = new Worm.Orm.OrmTable[] {
                new Worm.Orm.OrmTable("[dbo].[tbl_user]")};
    }
}
				}
				return this._tables;
			}
			
			protected virtual Worm.Orm.OrmTable GetTable(DAWorm.Tbl_user.Tbl_userSchemaDef.TablesLink tbl)
			{
				return ((Worm.Orm.OrmTable)(this.GetTables().GetValue(((int)(tbl)))));
			}
			
			public virtual bool ChangeValueType(Worm.Orm.ColumnAttribute c, object value, ref object newvalue)
			{
				if ((((c._behavior & Worm.Orm.Field2DbRelations.InsertDefault) 
							== Worm.Orm.Field2DbRelations.InsertDefault) 
							&& ((value == null) 
							|| System.Activator.CreateInstance(value.GetType()).Equals(value))))
				{
					newvalue = System.DBNull.Value;
					return true;
				}
				newvalue = value;
				return false;
			}
			
			public virtual Worm.Orm.OrmJoin GetJoins(Worm.Orm.OrmTable left, Worm.Orm.OrmTable right)
			{
				return default(Worm.Orm.OrmJoin);
			}
			
			public virtual Worm.Orm.ColumnAttribute[] GetSuppressedColumns()
			{
				return new Worm.Orm.ColumnAttribute[0];
			}
			
			public virtual Worm.Orm.IFilter GetFilter(object filter_info)
			{
				return null;
			}
			
			public virtual Worm.Orm.M2MRelation[] GetM2MRelations()
			{
				if ((this._m2mRelations == null))
				{
lock (this._forM2MRelationsLock)
{
    if ((this._m2mRelations == null)) {
        Worm.Orm.M2MRelation[] m2mRelations = new Worm.Orm.M2MRelation[0];
        this._m2mRelations = m2mRelations;
    }
}
				}
				return this._m2mRelations;
			}
			
			public virtual Worm.Orm.Collections.IndexedCollection<string, Worm.Orm.MapField2Column> GetFieldColumnMap()
			{
				if ((this._idx == null))
				{
lock (this._forIdxLock)
{
    if ((this._idx == null)) {
        Worm.Orm.Collections.IndexedCollection<string, Worm.Orm.MapField2Column> idx = new Worm.Orm.OrmObjectIndex();
        idx.Add(new Worm.Orm.MapField2Column("ID", "user_id", this.GetTable(DAWorm.Tbl_user.Tbl_userSchemaDef.TablesLink.tbldbotbl_user), Worm.Orm.Field2DbRelations.None));
        idx.Add(new Worm.Orm.MapField2Column("First_name", "first_name", this.GetTable(DAWorm.Tbl_user.Tbl_userSchemaDef.TablesLink.tbldbotbl_user)));
        idx.Add(new Worm.Orm.MapField2Column("Last_name", "last_name", this.GetTable(DAWorm.Tbl_user.Tbl_userSchemaDef.TablesLink.tbldbotbl_user)));
        this._idx = idx;
    }
}
				}
				return this._idx;
			}
			
			public virtual void GetSchema(Worm.Orm.OrmSchemaBase schema, System.Type t)
			{
				this._schema = schema;
				this._entityType = t;
			}
			
			#region Nested Types
			public enum TablesLink
			{
				
				tbldbotbl_user = 0,
			}
			#endregion
		}
		#endregion
	}
}
